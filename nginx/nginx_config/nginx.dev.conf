user  nginx;
worker_processes  auto;
pid          /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
events {
  worker_connections 1024;
}


http{




include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout   300s ;
    client_body_timeout 300s;
    client_header_timeout 300s;
    send_timeout 300s;    
    proxy_cache_path   /tmp/ levels=1:2 keys_zone=s3_cache:10m max_size=500m
                    inactive=60m use_temp_path=off;

 server {

    listen 80;
    server_name 127.0.0.1;

     location / {
    root /usr/share/nginx/html/;
    try_files $uri $uri/ /index.html;
  }

  error_page   500 502 503 504  /50x.html;

   location = /50x.html {
            root /usr/share/nginx/html/;
     }

    location @proxy {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_redirect off;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
    # CORS headers
    add_header 'Access-Control-Allow-Origin' 'http://127.0.0.1';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        # Handle preflight requests
     if ($request_method = OPTIONS) {
           return 204;
        }
     proxy_pass http://127.0.0.1:8000;
    }

    location /admin/ {
    try_files $uri @proxy;
    }

     location /accounts/ {
    try_files $uri @proxy;
   }

   location /api-auth/ {
    try_files $uri @proxy;
   }

   location /fire-outbreak/ {
    try_files $uri @proxy;
   }

   location /fire-outbreakpi/password_reset/ {
    try_files $uri @proxy;
   }


   location /django_static/ {
        #autoindex on;
        alias /app/fire_outbreak_project/fire_outbreak_project/staticfiles/; # object storage to be used here
    }
       location /media/ {
       #autoindex on;
       alias /app/fire_outbreak_project/fire_outbreak_project/media/;
    }

 


 }


}
